************** INTERFACE *************

		INTERFACE ASLA BIR CLASS DEGILDIR. INTERFACE INTERFACE'DIR.

1- Interface yapilarda concrete method asla create! edilemez. Sadece abstract methodlar create edilir.

2- java multiple inheritance desteklemez. Ancak interface parentler multiple inheritance'i destekler.

3- Birden fazla parent class'larda ayni isimli method'larin olmasi durumunda child class ayni isimli
	farkli bodyli methodlar icin secim yapamaz. Fakat interface'lerde methodlarin bodyleri olmadigindan
	ayni isimli methodlar birbiriyle tamamen ayni oldugu icin secim soz konusu olmaz ve child class parent
	interface'den ayni isimli methodlardan birini override ederek bu sorun cozulur.

Trick: Parent interface'lerde ayni isimli fakat farkli return type'li methodlar child class'ta CTE verir

4- interface yapilarda tum methodlar abstract yapida olmak zorunda oldugundan method signature "abstract"
	keyword'u yazilmayabilir.

	public abstract void koltuk();--> abstract method
	public void ayna();			  -->bu da abstract method
	
5- Interface'lerdeki tum memberlar public oldugu icin Access Modifier yazilmasa da public'dir	

	public void ayna() <--> public void ayna(); --> ayni islemi yapar

	Trick : Normal class'larda AccMod yazilmazsa default degerini alir ancak interface'lerde AccMod 
		yazilmazsa public olur.
		
6- interface'ler kendi arasinda parent child (extends) iliskisi kurabilir.
	
	interface'leri bir class'a parent yapmak icin "implements " keywordu kullanilir
	Class'lari bir class'a parent yapmak icin "extends " keywordu kullanilir

	class-->class 		  : extends
	interface-->interface : extends
	class-->interface	  : implements
	interface-->class 	  : O-LA-MAZZZ.. interface'in parenti class olamaz..
	
7- Interface'lerde variable'lar mutlaka final'dir.
	a) Final variable'lar italik bold'dur ve buyuk harf ile yazilmalidir.
	b)Final variable'lar initialize edilmezse CTE verir.
	
8- Interface'lerde variable'lar mutlaka static'dir. Dolayisiyla obj create etmeden interface ismi ile call edilebilir.
	
9- ***** Interface'lerde tum memberlar public'tir. 
	Dolayisiyla tum interface variable'lari--> public+static+final (yazsa da yazmasa da)	
	
	TRICK : Ayni isimli ve ayni data type'li variable'lar parent interface'lerde create edip object 
		 	kullanarak call edilirse Java hangisini sececegine karar veremez ve CTE verir. CTE almamak icin
		 	ayni isimli variable'lar kesinlikle "interface" ismi kullanilarak call edilmelidir.
	
	
10- Interface yapilarda istenirse abstract olmayan concrete method create edilebilir
	a)AccMod'dan sonra "default" veya "static" keyword'u kullanilmali	
	b)Interface yapilarda concrete method icin kullanilan "default" keyword'u kesinlikle
	  ASLA AccMod turunu vermez.
	c)Interface yapilarda concrete method child class tarafindan override edilmek zorunda degildir  
	d)Interface yapilarda "default" olarak create edilen concrete method child class'a ancak "obj" ile call edilir
	e)Interface yapilarda "static" olarak create edilen concrete method child class'a ancak 
	  "Data type(interface name)" ile call edilir
	
	
	
	
	
	
	
	
	